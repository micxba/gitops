singleNamespace: false

workflow:
  serviceAccount:
    create: true
# Controller
controller:
  metricsConfig:
    enabled: true
  serviceMonitor:
    enabled: true
    additionalLabels:
      app: argo-workflows
      release: kps
  # override due to millions of Loki logs if using generated ConfigMap name from Argo-CD
  configMap:
    create: true
    name: workflow-controller-configmap
  workflowDefaults:
    spec:
      metrics:
        prometheus:
        - name: workflow_failed_count
          counter:
            value: "1"
          help: Failed workflow counter
          labels:
          - key: workflow_name
            value: "{{ workflow.name }}"
          - key: workflow_namespace
            value: "{{ workflow.namespace }}"
          - key: workflow_duration_seconds
            value: "{{ workflow.duration }}"
          - key: workflow_created_at
            value: "{{ workflow.creationTimestamp }}"
          - key: cron_workflow
            value: "{{= sprig.default('', workflow.labels['workflows.argoproj.io/cron-workflow']) }}"
          when: "{{= workflow.status == 'Failed' or workflow.status == 'Error' }}"


  # -- enable Workflow Archive to store the status of workflows. Postgres and MySQL (>= 5.7.8) are available.
  ## Ref: https://argo-workflows.readthedocs.io/en/stable/workflow-archive/
  persistence: {}
  # connectionPool:
  #   maxIdleConns: 100
  #   maxOpenConns: 0
  # # save the entire workflow into etcd and DB
  # nodeStatusOffLoad: false
  # # enable archiving of old workflows
  # archive: false
  # postgresql:
  #   host: localhost
  #   port: 5432
  #   database: postgres
  #   tableName: argo_workflows
  #   # the database secrets must be in the same namespace of the controller
  #   userNameSecret:
  #     name: argo-postgres-config
  #     key: username
  #   passwordSecret:
  #     name: argo-postgres-config
  #     key: password
  #   ssl: true
  #   # sslMode must be one of: disable, require, verify-ca, verify-full
  #   # you can find more information about those ssl options here: https://godoc.org/github.com/lib/pq
  #   sslMode: require
  workflowNamespaces:
    - default
    - workflows
    - events

server:
  authModes:
    - sso
  ingress:
    enabled: true
    annotations:
      external-dns.alpha.kubernetes.io/target: "ruleof3-k8s.sith.network"
    hosts:
      - argoworkflows.sith.network
    paths:
      - /
    tls:
      - hosts:
          - argoworkflows.sith.network

  sso:
    enabled: true
    issuer: https://dex.sith.network/dex
    clientId:
      name: argo-wf-sso
      key: client-id
    clientSecret:
      name: argo-wf-sso
      key: client-secret
    redirectUrl: "https://argoworkflows.sith.network/oauth2/callback"
    rbac:
      enabled: false
      scopes:
        - openid
        - profile
        - email
    sessionExpiry: 240h

artifactRepository:
  archiveLogs: true
  s3:
    bucket: argo-workflows
    endpoint: s3.sith.network:3900
    insecure: true                
    region: garage            
    accessKeySecret:
      name: argo-w-minios3
      key: access_key
    secretKeySecret:
      name: argo-w-minios3
      key: secret_key

