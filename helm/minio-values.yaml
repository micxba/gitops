auth:
  existingSecret: "minio-root-user"
  ## @param auth.rootUserSecretKey Key where the MINIO_ROOT_USER username is being stored inside the existing secret `auth.existingSecret`
  ##
  rootUserSecretKey: "username"
  ## @param auth.rootPasswordSecretKey Key where the MINIO_ROOT_USER password is being stored inside the existing secret `auth.existingSecret`
  ##
  rootPasswordSecretKey: "password"

ingress:
  enabled: true
  hostname: s3.sith.network
  tls: true

  extraTls:
    - hosts:
        - s3.sith.network
      secretName: wildcard-sith-network


persistence:
  size: 20Gi

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      release: kps

console:
  enabled: true
  containerPorts:
    http: 9090
  resourcesPreset: "nano"
  ## @param console.resources Set MinIO&reg; Console container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param console.podSecurityContext.enabled Enable MinIO&reg; Console pods' Security Context
  ## @param console.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for MinIO&reg; Console pods
  ## @param console.podSecurityContext.sysctls Set kernel settings using the sysctl interface for MinIO&reg; Console pods
  ## @param console.podSecurityContext.supplementalGroups Set filesystem extra groups for MinIO&reg; Console pods
  ## @param console.podSecurityContext.fsGroup Set fsGroup in MinIO&reg; Console pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param console.containerSecurityContext.enabled Enabled MinIO&reg; Console container' Security Context
  ## @param console.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in MinIO&reg; Console container
  ## @param console.containerSecurityContext.runAsUser Set runAsUser in MinIO&reg; Console container' Security Context
  ## @param console.containerSecurityContext.runAsGroup Set runAsGroup in MinIO&reg; Console container' Security Context
  ## @param console.containerSecurityContext.runAsNonRoot Set runAsNonRoot in MinIO&reg; Console container' Security Context
  ## @param console.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in MinIO&reg; Console container' Security Context
  ## @param console.containerSecurityContext.privileged Set privileged in MinIO&reg; Console container' Security Context
  ## @param console.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in MinIO&reg; Console container' Security Context
  ## @param console.containerSecurityContext.capabilities.drop List of capabilities to be dropped in MinIO&reg; Console container
  ## @param console.containerSecurityContext.seccompProfile.type Set seccomp profile in MinIO&reg; Console container
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param console.command Override default MinIO&reg; Console container command (useful when using custom images)
  ##
  command: []
  ## @param console.args Override default MinIO&reg; Console container args (useful when using custom images)
  ##
  args: []
  ## @param console.automountServiceAccountToken Mount Service Account token in MinIO&reg; Console pods
  ##
  automountServiceAccountToken: false
  ## @param console.hostAliases MinIO&reg; Console pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param console.deploymentAnnotations Annotations for MinIO&reg; Console deployment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  deploymentAnnotations: {}
  ## @param console.podLabels Extra labels for MinIO&reg; Console pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param console.podAnnotations Annotations for MinIO&reg; Console pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param console.podAffinityPreset Pod affinity preset. Ignored if `console.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param console.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `console.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node console.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param console.nodeAffinityPreset.type Node affinity preset type. Ignored if `console.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param console.nodeAffinityPreset.key Node label key to match. Ignored if `console.affinity` is set
    ##
    key: ""
    ## @param console.nodeAffinityPreset.values Node label values to match. Ignored if `console.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param console.affinity Affinity for MinIO&reg; Console pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `console.podAffinityPreset`, `console.podAntiAffinityPreset`, and `console.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param console.nodeSelector Node labels for MinIO&reg; Console pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param console.tolerations Tolerations for MinIO&reg; Console pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param console.updateStrategy.type MinIO&reg; Console deployment strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    ## Can be set to RollingUpdate or Recreate
    ##
    type: RollingUpdate
  ## @param console.priorityClassName MinIO&reg; Console pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param console.topologySpreadConstraints Topology Spread Constraints for MinIO&reg; Console pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param console.schedulerName Name of the k8s scheduler (other than default) for MinIO&reg; Console pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param console.terminationGracePeriodSeconds Seconds MinIO&reg; Console pods need to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param console.lifecycleHooks for MinIO&reg; Console containers to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param console.extraEnvVars Array with extra environment variables to add to MinIO&reg; Console containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param console.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for MinIO&reg; Console containers
  ##
  extraEnvVarsCM: ""
  ## @param console.extraEnvVarsSecret Name of existing Secret containing extra env vars for MinIO&reg; Console containers
  ##
  extraEnvVarsSecret: ""
  ## @param console.extraVolumes Optionally specify extra list of additional volumes for the MinIO&reg; Console pods
  ##
  extraVolumes: []
  ## @param console.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the MinIO&reg; Console containers
  ##
  extraVolumeMounts: []
  ## @param console.sidecars Add additional sidecar containers to the MinIO&reg; Console pods
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param console.initContainers Add additional init containers to the MinIO&reg; Console pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param console.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param console.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param console.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `console.pdb.minAvailable` and `console.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param console.autoscaling.vpa.enabled Enable VPA for MinIO&reg; Console pods
    ## @param console.autoscaling.vpa.annotations Annotations for VPA resource
    ## @param console.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
    ## @param console.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
    ## @param console.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
    ##
    vpa:
      enabled: false
      annotations: {}
      controlledResources: []
      maxAllowed: {}
      minAllowed: {}
      ## @param console.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
      ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updatePolicy:
        updateMode: Auto
    ## @param console.autoscaling.hpa.enabled Enable HPA for MinIO&reg; Console pods
    ## @param console.autoscaling.hpa.minReplicas Minimum number of replicas
    ## @param console.autoscaling.hpa.maxReplicas Maximum number of replicas
    ## @param console.autoscaling.hpa.targetCPU Target CPU utilization percentage
    ## @param console.autoscaling.hpa.targetMemory Target Memory utilization percentage
    ##
    hpa:
      enabled: false
      minReplicas: ""
      maxReplicas: ""
      targetCPU: ""
      targetMemory: ""

  ingress:
    enabled: true
    hostname: minio.sith.network
    tls: true
