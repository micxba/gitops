global:
  namespace: "vault"
injector:
  enabled: false
server:
  ingress:
    enabled: true
    hosts:
      - host: vault.sith.network
    tls:
      - secretName: wildcard-sith-network
        hosts:
          - vault.sith.network
  
  extraEnvironmentVars:
    VAULT_SEAL_TYPE: ocikms
    VAULT_OCI_SEAL_TENANCY_OCID: ocid1.tenancy.oc1..aaaaaaaao6gycp2chzkf3epk36tdqgxky322tn7k2dky6uc7xnz2sl4gtwtq
    VAULT_OCI_SEAL_USER_OCID: ocid1.user.oc1..aaaaaaaandnpojivnbdrambktw2l5n36wlwpsmgllcby5mahax7mbd6mz4hq
    VAULT_OCI_SEAL_FINGERPRINT: cc:16:80:fd:b4:41:49:5d:8f:7e:10:bc:f4:2a:37:3b
    VAULT_OCI_SEAL_PRIVATE_KEY_PATH: /vault/userconfig/oci-kms-key.pem
    VAULT_OCI_SEAL_KEY_OCID: ocid1.key.oc1.iad.ejud2dszaaej6.abuwcljt5ayeb75a3dvrdurxv6iunfbs4zpsyq7mfp7x2ogh3v5y3wwwyzya
    VAULT_OCI_SEAL_REGION: us-ashburn-1

  extraVolumes:
    - type: secret
      name: vault-oci-auth

  extraVolumeMounts:
    - name: vault-oci-auth
      mountPath: /vault/userconfig
      readOnly: true


  auditStorage:
    enabled: true
    size: 10Gi
    mountPath: "/vault/audit"
  standalone:
    enabled: false
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      config: |
        ui = true

        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          telemetry {
            unauthenticated_metrics_access = "true"
          }
        }

        storage "raft" {
          path = "/vault/data"
        }

        telemetry {
          prometheus_retention_time = "30s"
          disable_hostname = true
        }

        service_registration "kubernetes" {}
serverTelemetry:
  serviceMonitor:
    enabled: true
    selectors:
      release: kps
