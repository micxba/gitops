global:
  namespace: "vault"
injector:
  enabled: false
server:
  ingress:
    enabled: true
    hosts:
      - host: vault.sith.network
    tls:
      - secretName: wildcard-sith-network
        hosts:
          - vault.sith.network
  
  # Vault auto-unseal configuration using Talos Vault Keys
  volumes:
    - name: unseal-secret
      projected:
        sources:
          - secret:
              name: vault-unseal-secret
              
  extraInitContainers:
    - name: vault-unseal
      image: alpine:3.20
      command: ["/bin/sh", "-c"]
      args:
        - |
          apk add --no-cache curl jq
          until curl -s http://localhost:8200/v1/sys/health | grep -q 'sealed.*true'; do sleep 1; done
          for key in $(jq -r '.keys[]' /vault/unseal/vault-keys.json); do
            echo "Unsealing Vault..."
            curl -s --request PUT --data "{\"key\": \"$key\"}" http://localhost:8200/v1/sys/unseal
            sleep 1
          done
      volumeMounts:
        - name: unseal-secret
          mountPath: /vault/unseal
          readOnly: true

  auditStorage:
    enabled: true
    size: 10Gi
    mountPath: "/vault/audit"
  standalone:
    enabled: false
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      config: |
        ui = true

        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          telemetry {
            unauthenticated_metrics_access = "true"
          }
        }

        storage "raft" {
          path = "/vault/data"
        }

        telemetry {
          prometheus_retention_time = "30s"
          disable_hostname = true
        }

        service_registration "kubernetes" {}
serverTelemetry:
  serviceMonitor:
    enabled: true
    selectors:
      release: kps
