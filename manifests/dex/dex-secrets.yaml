apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: dex-secrets
  namespace: dex
spec:
  data:
  - remoteRef:
      key: /ldap
      property: LDAP_READONLY_PASSWORD
    secretKey: LDAP_READONLY_PASSWORD
  - remoteRef:
      key: /dex
      property: oidc_argo_secret
    secretKey: oidc_argo_secret
  - remoteRef:
      key: /dex
      property: oidc_minio_secret
    secretKey: oidc_minio_secret
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend-css
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    name: dex-secrets
    template:
      type: Opaque
      data:
        config.yaml: |
          issuer: https://dex.sith.network/dex
          storage:
            type: sqlite3
            config:
              file: /var/dex/dex.db
          web:
            http: 0.0.0.0:5556
          oauth2:
            skipApprovalScreen: true
          
          staticClients:
          - id: argocd
            name: Argo CD
            public: true
            redirectURIs:
            - https://argocd.sith.network/auth/callback
            - http://localhost:8085/auth/callback
          - id: minio
            redirectURIs:
              - http://s3.sith.network:9001/oauth_callback
            name: MinIO
            secret: {{ .oidc_minio_secret }}
          
          connectors:
          - type: ldap
            name: OpenLDAP
            id: ldap
            config:
              host: ldap.sith.network
              insecureNoSSL: false
              insecureSkipVerify: false
              bindDN: uid=read_only,cn=users,dc=sith,dc=network
              bindPW: "{{ .LDAP_READONLY_PASSWORD }}"
              usernamePrompt: Username
              userSearch:
                baseDN: cn=users,dc=sith,dc=network
                filter: "(objectClass=posixAccount)"
                username: uid
                idAttr: DN
                emailAttr: mail
                nameAttr: gecos
              groupSearch:
                baseDN: cn=groups,dc=sith,dc=network
                filter: "(objectClass=posixGroup)"
                userMatchers:
                - userAttr: uid
                  groupAttr: memberUid
                nameAttr: cn
