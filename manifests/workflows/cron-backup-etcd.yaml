apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: cron-backup-etcd
  namespace: workflows
spec:
  schedule: "0 2 * * *"  # Every day at 2 AM
  timezone: "UTC"
  concurrencyPolicy: "Replace"
  startingDeadlineSeconds: 300
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  workflowSpec:
    entrypoint: backup-etcd
    serviceAccountName: argo-workflow
    templates:
      - name: backup-etcd
        steps:
          - - name: backup
              template: backup

      - name: backup
        container:
          image: ghcr.io/micxba/tools:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -euo pipefail

              export TALOSCONFIG=/tmp/talos/config
              export AWS_ACCESS_KEY_ID="$access_key"
              export AWS_SECRET_ACCESS_KEY="$secret_key"

              DATE=$(date +%Y%m%d%H%M)
              cp='192.168.0.216'
              wn='192.168.0.220'

              talosctl -n "$cp" etcd snapshot ruleof3-k8s-etcd-${DATE}.snapshot
              talosctl -n "$cp" get mc v1alpha1 -o yaml | yq -o=yaml '.spec' > cp.yaml
              talosctl -n "$wn" get mc v1alpha1 -o yaml | yq -o=yaml '.spec' > wn.yaml

              tar -zcf cluster-backup-${DATE}.tar.gz ruleof3-k8s-etcd-${DATE}.snapshot cp.yaml wn.yaml

              # Upload to S3 (optional)
              # aws s3 cp cluster-backup-${DATE}.tar.gz s3://talos-backups/ --no-progress

          env:
            - name: access_key
              valueFrom:
                secretKeyRef:
                  name: argo-w-minios3
                  key: access_key
            - name: secret_key
              valueFrom:
                secretKeyRef:
                  name: argo-w-minios3
                  key: secret_key
          volumeMounts:
            - name: talosconfig
              mountPath: /tmp/talos
              readOnly: true

    volumes:
      - name: talosconfig
        secret:
          secretName: talosconfig
