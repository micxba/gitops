apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: scheduled-pgdumps
spec:
  schedule: "55 * * * *"
  timezone: "UTC"
  concurrencyPolicy: "Allow"
  startingDeadlineSeconds: 600
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  workflowSpec:
    entrypoint: run-parallel-dumps
    serviceAccountName: argo-workflow
    parallelism: 5
    arguments:
      parameters:
        - name: timestamp
          value: "{{=sprig.date(\"2006-01-02\", sprig.now)}}"
        - name: databases
          value: ["wiki", "app", "outline", "postgres"]

    templates:
      - name: run-parallel-dumps
        inputs:
          parameters:
            - name: timestamp
            - name: databases
        steps:
          - - name: dump-each-database
              templateRef:
                name: pgdump-s3
                template: backup
              arguments:
                parameters:
                  - name: postgres_host
                    value: pg-main-r.cnpg-system
                  - name: postgres_database
                    value: "{{item}}"
                  - name: s3_endpoint
                    value: s3.sith.network:3900
                  - name: s3_bucket
                    value: pg-backups
                  - name: s3_prefix
                    value: "{{inputs.parameters.timestamp}}"
              withParam: "{{inputs.parameters.databases}}"

          - - name: promote-daily-backups
              templateRef:
                name: pgdump-s3-retention
                template: promote-daily
              arguments:
                parameters:
                  - name: date
                    value: "{{inputs.parameters.timestamp}}"
                  - name: databases
                    value: "{{inputs.parameters.databases}}"

          - - name: promote-monthly-backups
              templateRef:
                name: pgdump-s3-retention
                template: promote-monthly
              when: "{{=sprig.date(\"02\", sprig.now) == `01`}}"
              arguments:
                parameters:
                  - name: date
                    value: "{{inputs.parameters.timestamp}}"
                  - name: databases
                    value: "{{inputs.parameters.databases}}"

          - - name: prune-old-backups
              templateRef:
                name: pgdump-s3-retention
                template: prune-expired
              arguments:
                parameters:
                  - name: databases
                    value: "{{inputs.parameters.databases}}"
