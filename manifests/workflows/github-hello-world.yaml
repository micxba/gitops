---
# This Sensor watches for the "gitops" event from the EventSource named "github".
# When received, it triggers the creation of a Workflow based on the "hello-world" WorkflowTemplate.
# The Workflow is created in the "workflows" namespace.
# The Sensor uses the "argo-workflow" service account, which must have permission to create Workflows in that namespace.
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github-hello-world-sensor
  namespace: events
spec:
  serviceAccountName: argo-workflow  # Must have RBAC to create Workflows in target namespace
  eventBusName: default              # Uses the default JetStream-backed event bus
  dependencies:
    - name: push-event
      eventSourceName: github
      eventName: gitops              # Matches the key under EventSource's `github:`
  triggers:
    - template:
        name: trigger-hello-template
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-triggered-     # Randomized workflow name
                namespace: workflows
              spec:
                workflowTemplateRef:
                  name: hello-world                 # Reference to pre-existing WorkflowTemplate

#### Example for different events:
# dependencies:
#   - name: push-event
#     eventSourceName: github
#     eventName: gitops
#     filters:
#       data:
#         - path: "header.X-GitHub-Event"
#           type: string
#           value:
#             - push

# dependencies:
#   - name: pr-event
#     eventSourceName: github
#     eventName: gitops
#     filters:
#       data:
#         - path: "header.X-GitHub-Event"
#           type: string
#           value:
#             - pull_request
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: hello-world
  namespace: workflows
spec:
  entrypoint: say-hello
  serviceAccountName: argo-workflow
  templates:
    - name: say-hello
      container:
        image: alpine:3.19
        command: [sh, -c]
        args: ["echo Hello, world!"]
